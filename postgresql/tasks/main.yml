---
# tasks file for postgresql
    - name: Install packages
      ansible.builtin.apt:
        name:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
        state: present

    - name: Check if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "{{ postgresql_data_dir }}/pg_hba.conf"
      register: postgres_data

    - name: Empty data dir
      ansible.builtin.file:
        path: "{{ postgresql_data_dir }}"
        state: absent
      when: not postgres_data.stat.exists

    - name: Initialize PostgreSQL
      ansible.builtin.shell: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
      become: true
      become_user: postgres
      when: not postgres_data.stat.exists

    - name: Start and enable service
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true
    

# Create app database and USERs
    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ POSTGRES_DB }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ POSTGRES_USER }}"
        password: "{{ POSTGRES_PASSWORD }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ POSTGRES_DB }}"
        roles: "{{ POSTGRES_USER }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "/etc/postgresql/14/main/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ POSTGRES_USER }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

# Write DATA to DB	
    - name: "CREATE TABLE"
      command: psql -d {{ POSTGRES_DB }} -c CREATE TABLE author (id SERIAL, name VARCHAR(100))
      become_user: postgres

    - name: "EINSERT INTO DB"
      command: psql -d {{ POSTGRES_DB }} -c INSERT INTO author (name) VALUES ('John'), ('Alex')
      become_user: postgres